services:
  db:
    image: postgres:17.4
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME:-debelaci}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-Hello@123}
    restart: always
    volumes:
      - ./containers_data/postgres_data:/var/lib/postgresql/data
      - ./config/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./config/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    container_name: book-my-escape-room-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-debelaci}"]
      interval: 5s
      timeout: 10s
      retries: 5
    extra_hosts:
      - "host.docker.internal:host-gateway"

  web:
    build:
      context: .
      dockerfile: config/django/Dockerfile
    command: ["web"]
    environment:
      DEBUG: ${DEBUG:-False}
      CURRENT_ENVIRONMENT: docker
      RABITMQ_CONNECTION_STRING: ${RABITMQ_CONNECTION_STRING}
    env_file:
      - .env
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    restart: always
    volumes:
      - .:/app

  # celery:
  #   build:
  #     context: .
  #     dockerfile: config/django/Dockerfile
  #   command: ["celery"]
  #   networks:
  #     - app-network
  #   environment:
  #     CURRENT_ENVIRONMENT: docker
  #     DATABASE_URL: postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-Hello@1234}@db:${DB_PORT:-5432}/${DB_NAME:-book_my_escape_room}
  #     # RABBITMQ_URL: ${RABITMQ_CONNECTION_STRING}
  #     RABITMQ_CONNECTION_STRING: ${RABITMQ_CONNECTION_STRING}
  #   env_file:
  #     - .env
  #   volumes:
  #     - .:/app
  #   restart: always


